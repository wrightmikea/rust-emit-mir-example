digraph Mir_0_3 {
    graph [fontname="monospace"];
    node [fontname="monospace"];
    edge [fontname="monospace"];
    label=<fn main() -&gt; ()<br align="left"/>let _1: std::boxed::Box&lt;std::string::String&gt;;<br align="left"/>let mut _2: std::boxed::Box&lt;std::string::String&gt;;<br align="left"/>let mut _3: std::string::String;<br align="left"/>let mut _4: &amp;str;<br align="left"/>let _5: &amp;str;<br align="left"/>let _6: std::string::String;<br align="left"/>let mut _7: std::boxed::Box&lt;std::string::String&gt;;<br align="left"/>let mut _8: &amp;std::boxed::Box&lt;std::string::String&gt;;<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: ();<br align="left"/>debug foo1 =&gt; _1;<br align="left"/>debug _foo2 =&gt; _6;<br align="left"/>>;
    bb0__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_9 = const false<br/>StorageLive(_1)<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = const &quot;bar1&quot;<br/>_4 = _5<br/></td></tr><tr><td align="left">_3 = const &lt;str as std::string::ToString&gt;::to_string(move _4)</td></tr></table>>];
    bb1__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb2__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">_2 = const std::boxed::Box::&lt;std::string::String&gt;::new(move _3)</td></tr></table>>];
    bb3__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>_9 = const true<br/>_1 = move _2<br/>StorageDead(_2)<br/>StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;_1<br/></td></tr><tr><td align="left">_7 = const &lt;std::boxed::Box&lt;std::string::String&gt; as std::clone::Clone&gt;::clone(move _8)</td></tr></table>>];
    bb4__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_6 = move (*_7)<br/></td></tr><tr><td align="left">_10 = const alloc::alloc::box_free::&lt;std::string::String&gt;(move (_7.0: std::ptr::Unique&lt;std::string::String&gt;))</td></tr></table>>];
    bb5__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb6__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = const false<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb7__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_9 = const false<br/>StorageDead(_1)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb8__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_9 = const false<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb9__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">switchInt(_9)</td></tr></table>>];
    bb0__0_3 -> bb2__0_3 [label="return"];
    bb0__0_3 -> bb9__0_3 [label="unwind"];
    bb2__0_3 -> bb3__0_3 [label="return"];
    bb2__0_3 -> bb9__0_3 [label="unwind"];
    bb3__0_3 -> bb4__0_3 [label="return"];
    bb3__0_3 -> bb9__0_3 [label="unwind"];
    bb4__0_3 -> bb5__0_3 [label="return"];
    bb5__0_3 -> bb6__0_3 [label="return"];
    bb5__0_3 -> bb9__0_3 [label="unwind"];
    bb6__0_3 -> bb7__0_3 [label="return"];
    bb8__0_3 -> bb1__0_3 [label="return"];
    bb9__0_3 -> bb1__0_3 [label="false"];
    bb9__0_3 -> bb8__0_3 [label="otherwise"];
}
